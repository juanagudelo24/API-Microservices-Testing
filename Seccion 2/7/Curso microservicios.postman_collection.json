{
	"info": {
		"_postman_id": "c050bcbb-1a0f-496b-9452-181eb930a90a",
		"name": "Curso microservicios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16510433"
	},
	"item": [
		{
			"name": "Web Services Api Teste Cases",
			"item": [
				{
					"name": "1.  All users Data",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2. User Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log('........this is a test.....')"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Validating Status Code\"] = responseCode.code === 201;\r",
									"tests[\"Validating response body\"] = responseBody.has(\"Student added\");\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 400;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"{{apellido}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"michael.lawson@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Wrong login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"peter@klaven\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. All employee data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employees",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Single Employee data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employee/9",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employee",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Create new employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test\",\r\n\"salary\":\"123\",\r\n\"age\":\"23\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/create",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Update employee record",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test1\",\r\n\"salary\":\"1123\",\r\n\"age\":\"23\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/update/21",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"update",
								"21"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Delete employee record",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/delete/700",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"delete",
								"700"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Student - Local API",
			"item": [
				{
					"name": "Create new record (Student)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Validating Status Code\"] = responseCode.code === 201;\r",
									"tests[\"Validating response body\"] = responseBody.has(\"Student added\");\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 400;\r",
									"\r",
									"tests[\"Successful POST request\"] = responseCode.code === 201 || responseCode.code === 202;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": 101,\r\n        \"firstName\": \"Pavan\",\r\n        \"lastName\": \"Kumar\",\r\n        \"email\": \"abcxyz@risusDonecegestas.edu\",\r\n        \"programme\": \"Manger\",\r\n        \"courses\": [\r\n            \"Java\",\r\n            \"Selenium\"\r\n           ]\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/student",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Validating Status Code\"] = responseCode.code === 200 ;\r",
									"tests[\"Validating response body\"]= responseBody.has(\"Pavan\") ;\r",
									"tests[\"Validating response body\"] = responseBody.has(\"Kumar\") ;\r",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8085/student/101",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"student",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Validating Status Code\"] = responseCode.code === 200 ;\r",
									"tests[\"Validating response body\"]= responseBody.has(\"Student Updated\") ;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 101,\r\n    \"firstName\": \"Pavan\",\r\n    \"lastName\": \"Kumar\",\r\n    \"email\": \"abcxyz@risusDonecegestas.edu\",\r\n    \"programme\": \"Trainer\",\r\n    \"courses\": [\r\n        \"Java\",\r\n        \"Selenium\",\r\n        \"Bigdata\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8085/student/101",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"student",
								"101"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Validating Status Code\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8085/student/101",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8085",
							"path": [
								"student",
								"101"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}