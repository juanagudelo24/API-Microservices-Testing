{
	"info": {
		"_postman_id": "efc6fcb9-2af8-4d81-8e8e-3216b02e608a",
		"name": "Cat API",
		"description": "## An open, free, read & write API all about Cats\nThe Cat API gives you access to 10000's of cat images\n- Upload your own images\n- Favourite or Vote on images\n- Get stats on your requests\n- Save a custom value with each request\n\n## How is this free?\nMy goal is to create free, fun & useful public service API's, helping people learn to code, create awesome projects, and be a stable fixture in a turbulent world.\n\n## How do i get access?\nJust signup for an API Key from https://thecatapi.com for free. I'm looking forward to seeing what you make!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Images",
			"item": [
				{
					"name": "/images/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14d970c6-0327-40e2-836f-52a5bf59fe2b",
								"exec": [
									"pm.test(\"response is ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"response should be okay to process\", function () { ",
									"    pm.response.to.not.be.error; ",
									"    pm.response.to.have.jsonBody(\"\"); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[optional] without it only the a basic set of images can be searched"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/search?",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"search"
							],
							"query": [
								{
									"key": "size",
									"value": "full",
									"description": "[optional] thumb , small, med or full - small is perfect for Discord",
									"disabled": true
								},
								{
									"key": "mime_types",
									"value": "jpg",
									"description": "[optional] a comma separated strig of types to return e.g. jpg,png for static, or gif for gifs",
									"disabled": true
								},
								{
									"key": "format",
									"value": "json",
									"description": "[optional] json | src",
									"disabled": true
								},
								{
									"key": "has_breeds",
									"value": "false",
									"description": "[optional] - only return images with breed data",
									"disabled": true
								},
								{
									"key": "order",
									"value": "RANDOM",
									"description": "[optional] default:RANDOM - RANDOM | ASC | DESC",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0",
									"description": "[optional] paginate through results",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"description": "[optional] number of results to return, up to 25 with a valid API-Key",
									"disabled": true
								}
							]
						},
						"description": "Searchs all approved images. \n\n\n#### Query Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| size | optional | The size of image to return - `small`, `med` or `full`. `small` is perfect for Discord. Defaults to `med`\n| mime_types | optional | Comma delimited string of the image types to return `gif`, `jpg`, or`png`. Defaults to return all types `jpg,gif,png`.                                                    |\n| format | optional | Response format `json`, or`src`. `src` will redirect straight to the image, so is useful for putting a link straight into HTML as the 'src' on an 'img' tag. Defaults to `json`                            |\n| order | optional | The order to return results in. `RANDOM`, `ASC` or `DESC`. If either `ASC` or `DESC` is passed then the Pagination headers will be on the response allowing you to see the total amount of results, and your current page. Default is `RANDOM`                      |\n| page | optional | Integer - used for Paginating through all the results. Only used when order is `ASC` or `DESC`                      |\n| limit | optional | Integer - number of results to return. Without an API Key you can only pass `1`, with a Key you can pass up to `25`. Default is `1`                      |\n| category_ids | optional | Comma delimited string of integers, matching the `id`'s of the Categories to filter the search. These categories can found in the `/v1/categories` request. e.g. category_ids=2                      |\n| breed_ids | optional | Comma delimited string of integers, matching the `id`'s of the Breeds to filter the search. These categories can found in the `/v1/breeds` request                      |\n| has_breeds | optional | Only return images which have breed data attached. Integer - `0` or `1`. Default is `0`                        |\n\n### Pagination\nIf order=ASC or order=DESC is passed, then the response will contain these Pagination headers\n\n| Key  | Description                                                                                     |\n|------|-------------------------------------------------------------------------------------------------|\n| Pagination-Count | Integer - the total amount of results matching your search|\n| Pagination-Page  | Integer - the current page\n| Pagination-Limit | Integer - amount of results being returned per page\n|"
					},
					"response": [
						{
							"name": "/images/search",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[optional] without it only the a basic set of images can be searched"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}v1/images/search?format=json",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"search"
									],
									"query": [
										{
											"key": "size",
											"value": "med",
											"description": "[optional] thumb , small, med or full - small is perfect for Discord",
											"disabled": true
										},
										{
											"key": "mime_types",
											"value": "jpg",
											"description": "[optional] a comma separated strig of types to return e.g. jpg,png for static, or gif for gifs",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "[optional] json | src"
										},
										{
											"key": "has_breeds",
											"value": "false",
											"description": "[optional] - only return images with breed data",
											"disabled": true
										},
										{
											"key": "order",
											"value": "RANDOM",
											"description": "[optional] default:RANDOM - RANDOM | ASC | DESC",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "[optional] paginate through results",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1",
											"description": "[optional] number of results to return, up to 25 with a valid API-Key",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "post-check=0, pre-check=0",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 26 Aug 2018 06:36:16 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "Tue, 03 Jul 2001 06:00:00 GMT",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Last-Modified",
									"value": "Sun Aug 26 2018 06:36:16 GMT+0000 (UTC)",
									"name": "Last-Modified",
									"description": "The last modified date for the requested object, in RFC 2822 format"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off",
									"name": "X-DNS-Prefetch-Control",
									"description": "Custom header"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen",
									"name": "X-Download-Options",
									"description": "Custom header"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-Response-Time",
									"value": "41ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"3fg\",\"url\":\"https://25.media.tumblr.com/tumblr_lqik92AS4I1qfy8klo1_500.jpg\",\"breeds\":[],\"categories\":[]}]"
						}
					]
				},
				{
					"name": "/images/:image_id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[optional]  will save this request to your account analytics\n"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/0LuGtzkq6?",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"0LuGtzkq6"
							],
							"query": [
								{
									"key": "sub_id",
									"value": null,
									"description": "[optional] if you want to save this request to your account stats",
									"disabled": true
								}
							]
						},
						"description": "Return 1 image matching the id passed."
					},
					"response": [
						{
							"name": "/images/:image_id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}v1/images/BkIEhN3pG",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"BkIEhN3pG"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "158",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 11:59:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "71ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"BkIEhN3pG\",\"url\":\"\",\"width\":912,\"height\":1024,\"mime_type\":\"image/jpeg\",\"breeds\":[{\"id\":10,\"name\":\"American Bulldog\"}],\"categories\":[],\"breed_ids\":\"10\"}"
						}
					]
				},
				{
					"name": "/images/",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - will return all the images from your account\n"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/?limit=10&page=2&order=DESC",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "[Optional] number of images to return valid  1 to 10 - default: 1"
								},
								{
									"key": "page",
									"value": "2",
									"description": "[Optional] only works if account_id is present to page through your own uploads"
								},
								{
									"key": "order",
									"value": "DESC",
									"description": "[Optional] only works if account_id is present, either ASC or DESC - ascending or descending."
								},
								{
									"key": "sub_id",
									"value": "user1",
									"description": "[Optional] If you want to ",
									"disabled": true
								},
								{
									"key": "breed_ids",
									"value": "1,4,28",
									"description": "[Optional] Id's of the breeds to filter by",
									"disabled": true
								},
								{
									"key": "category_ids",
									"value": "4",
									"description": "[Optional] Id's of the categories to filter by",
									"disabled": true
								},
								{
									"key": "format",
									"value": "json",
									"description": "[Optional] default is 'json', pass 'src' to redirect the request to the image's url - this is useful for setting the 'src' of an <img> tag.",
									"disabled": true
								},
								{
									"key": "original_filename",
									"value": null,
									"description": "[Optiona] filter to files you uploaded with the same name",
									"disabled": true
								},
								{
									"key": "user_id",
									"value": null,
									"description": "[Optional] default applied your unique user_id from welcome email, filter to only show images from your account that you have uploaded",
									"disabled": true
								}
							]
						},
						"description": "Returns the images from your account you uploaded via `/v1/images/upload`"
					},
					"response": [
						{
							"name": "/images/",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "ab5ffdb3-b8f2-4159-9706-990ccc46b1b3",
										"description": "[Optional] "
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}v1/images/?limit=10&page=0&order=DESC",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "[Optional] number of images to return valid  1 to 10 - default: 1"
										},
										{
											"key": "page",
											"value": "0",
											"description": "[Optional] only works if account_id is present to page through your own uploads"
										},
										{
											"key": "order",
											"value": "DESC",
											"description": "[Optional] only works if account_id is present, either ASC or DESC - ascending or descending."
										},
										{
											"key": "sub_id",
											"value": "user1",
											"description": "[Optional] If you want to ",
											"disabled": true
										},
										{
											"key": "breed_ids",
											"value": "1,4,28",
											"description": "[Optional] Id's of the breeds to filter by",
											"disabled": true
										},
										{
											"key": "category_ids",
											"value": "4",
											"description": "[Optional] Id's of the categories to filter by",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"description": "[Optional] default is 'json', pass 'src' to redirect the request to the image's url - this is useful for setting the 'src' of an <img> tag.",
											"disabled": true
										},
										{
											"key": "original_filename",
											"value": null,
											"description": "[Optiona] filter to files you uploaded with the same name",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "3031",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 12:24:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Response-Time",
									"value": "162ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"SJ6YQ-mRf\",\"url\":\"http://cdn1.thedogapi.com/images/SJ6YQ-mRf.gif\",\"width\":330,\"height\":186,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7pc03uDYD1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:50:29.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7pc03uDYD1vb46leo1_400.gif\"},{\"id\":\"r1EP7WmRM\",\"url\":\"http://cdn1.thedogapi.com/images/r1EP7WmRM.gif\",\"width\":344,\"height\":344,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7et7dDbvt1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:49:48.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7et7dDbvt1vb46leo1_400.gif\"},{\"id\":\"SJ9Nm-m0z\",\"url\":\"http://cdn1.thedogapi.com/images/SJ9Nm-m0z.gif\",\"width\":323,\"height\":323,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p7anz8xrxY1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:49:06.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p7anz8xrxY1vb46leo1_400.gif\"},{\"id\":\"HkWzmb7RG\",\"url\":\"http://cdn1.thedogapi.com/images/HkWzmb7RG.gif\",\"width\":402,\"height\":402,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p66rh3yOQZ1vb46leo1_500.gif\",\"created_at\":\"2018-05-11T01:48:24.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p66rh3yOQZ1vb46leo1_500.gif\"},{\"id\":\"BJNJ7-XCM\",\"url\":\"http://cdn1.thedogapi.com/images/BJNJ7-XCM.gif\",\"width\":328,\"height\":340,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p5x7l8Npvd1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:47:40.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p5x7l8Npvd1vb46leo1_400.gif\"},{\"id\":\"Byd3G-7Cz\",\"url\":\"http://cdn1.thedogapi.com/images/Byd3G-7Cz.gif\",\"width\":295,\"height\":275,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p5bw97ms4S1tlb56zo1_400.gif\",\"created_at\":\"2018-05-11T01:46:55.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p5bw97ms4S1tlb56zo1_400.gif\"},{\"id\":\"SyhKGWXRz\",\"url\":\"http://cdn1.thedogapi.com/images/SyhKGWXRz.gif\",\"width\":240,\"height\":300,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p4v52oRLhQ1tlb56zo1_250.gif\",\"created_at\":\"2018-05-11T01:46:11.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p4v52oRLhQ1tlb56zo1_250.gif\"},{\"id\":\"BJWwzW7Rz\",\"url\":\"http://cdn1.thedogapi.com/images/BJWwzW7Rz.gif\",\"width\":400,\"height\":442,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_p4ue73GTqE1ry46hlo1_400.gif\",\"created_at\":\"2018-05-11T01:45:29.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_p4ue73GTqE1ry46hlo1_400.gif\"},{\"id\":\"ryrVzZ7RM\",\"url\":\"http://cdn1.thedogapi.com/images/ryrVzZ7RM.gif\",\"width\":350,\"height\":197,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_ou6lq9N06K1vb46leo1_400.gif\",\"created_at\":\"2018-05-11T01:44:45.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_ou6lq9N06K1vb46leo1_400.gif\"},{\"id\":\"r1F-fZQCf\",\"url\":\"http://cdn1.thedogapi.com/images/r1F-fZQCf.gif\",\"width\":460,\"height\":263,\"mime_type\":\"image/gif\",\"sub_id\":\"tumblr_otdzzy1qvE1vnq1cro2_500.gif\",\"created_at\":\"2018-05-11T01:44:00.000Z\",\"breed_ids\":null,\"category_ids\":null,\"original_filename\":\"tumblr_otdzzy1qvE1vnq1cro2_500.gif\"}]"
						},
						{
							"name": "/images/",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}/api/v1/images/?limit=10",
									"host": [
										"{{endpoint}}"
									],
									"path": [
										"api",
										"v1",
										"images",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "connection",
									"value": "keep-alive",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "2495",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Wed, 11 Apr 2018 12:37:55 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Origin",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-response-time",
									"value": "110ms",
									"name": "x-response-time",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"S1bsCGxrf\",\"url\":\"http://78.media.tumblr.com/2bc94b9eec2d00f5d28110ba191da896/tumblr_nyled8DYKd1qg9kado1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[{\"id\":3,\"name\":\"Alaskan Malamute\",\"wikipedia_url\":\"https://en.wikipedia.org/wiki/Alaskan_Malamute\"},{\"id\":2,\"name\":\"Akita\",\"wikipedia_url\":\"https://en.wikipedia.org/wiki/Akita_(dog)\"}],\"animals\":[],\"categories\":[]},{\"id\":\"B1gZsCMgrG\",\"url\":\"http://78.media.tumblr.com/75f7f5ba97da53c61026fe6cad16c97c/tumblr_o8h7llrbDt1rzz2who1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"HJZWiCGgSf\",\"url\":\"http://78.media.tumblr.com/84f729a7130860dda9b7544664a36094/tumblr_nvgiskSmew1un7zabo3_r1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"HyGWiRfgBM\",\"url\":\"http://78.media.tumblr.com/6fb13a48907b7d65f79a07afdc9c5ebe/tumblr_nhlytoREfQ1rvsh0oo1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"Bk4-oAzlHM\",\"url\":\"http://78.media.tumblr.com/4217786db510db68daed375cea8ec4d9/tumblr_nlf1ggSff71ruv93po1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"H1HWiCMxHG\",\"url\":\"http://78.media.tumblr.com/a9c056e66b11e1a91a9a03d8c0d04e89/tumblr_o7uwyquvpM1qjcdw9o1_1280.png\",\"width\":null,\"height\":null,\"mime_type\":\"image/png\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"rkUZsAGeHM\",\"url\":\"http://78.media.tumblr.com/9666e3107587fa2dd7833033ec42b7ba/tumblr_o0ymimYfp71rozzl0o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"BkDZjRzlSz\",\"url\":\"http://78.media.tumblr.com/9b5ed3d0bcd102bb028f137267082777/tumblr_o6zaks1SvQ1qjcdw9o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"ByuZj0GgBf\",\"url\":\"http://78.media.tumblr.com/766f297cf8b282cd2820fc4c9161c328/tumblr_o7hktkxin01qjcdw9o1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]},{\"id\":\"r1tWjAfxHz\",\"url\":\"http://78.media.tumblr.com/5230380780945425e867a0a3aaa6f4b0/tumblr_n8w47dGOhd1r7qbtpo1_1280.jpg\",\"width\":null,\"height\":null,\"mime_type\":\"image/jpeg\",\"entities\":[],\"breeds\":[],\"animals\":[],\"categories\":[]}]"
						}
					]
				},
				{
					"name": "/images/upload",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - saves the uplaoded image to your account."
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"value": ""
								},
								{
									"key": "sub_id",
									"value": "",
									"description": "[optional] - a string you can use to segment your images, e.g. knowing which of your own users uploaded it.",
									"type": "text"
								},
								{
									"key": "breed_ids",
									"value": "",
									"description": "[optional] comma separated string of breed ids contained in the image",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{endpoint}}v1/images/upload",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - saves the uplaoded image to your account."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"remote_url\": \"https://s3-us-west-2.amazonaws.com/cdn2.thecatapi.com/upload-queue/99b83648.jpg\"\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/images/",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:0LuGtzkq6",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":0LuGtzkq6"
							],
							"variable": [
								{
									"key": "0LuGtzkq6",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id/breeds",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id/breeds",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id",
								"breeds"
							],
							"variable": [
								{
									"key": "image_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id/breeds",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - for now, you can only tag your own images with a breed\n\n"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"breed_id\": 10\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id/breeds",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id",
								"breeds"
							],
							"variable": [
								{
									"key": "image_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id/breeds/:breed_id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - only you can delete breeds from your images\n"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id/breeds/:breed_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id",
								"breeds",
								":breed_id"
							],
							"variable": [
								{
									"key": "image_id",
									"value": ""
								},
								{
									"key": "breed_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id/analysis",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "x-"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/images/:image_id/analysis",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								":image_id",
								"analysis"
							],
							"variable": [
								{
									"key": "image_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/images/:image_id/analysis",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required] - for now, you can only tag your own images with a breed\n\n"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"vendor\": \"AWS Rekognition\",\n\t\"labels\": \"[]\"\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/images/8/analysis",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"images",
								"8",
								"analysis"
							]
						}
					},
					"response": [
						{
							"name": "/images/:image_id/analysis",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-api-key",
										"value": "{{YOUR-API-KEY}}",
										"description": "[required] - for now, you can only tag your own images with a breed\n\n"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"vendor\": \"AWS Rekognition\",\n\t\"labels\": \"[]\"\n}"
								},
								"url": {
									"raw": "{{endpoint}}v1/images/8/analysis",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"images",
										"8",
										"analysis"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "95",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 25 Sep 2018 05:21:25 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off",
									"name": "X-DNS-Prefetch-Control",
									"description": "Custom header"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen",
									"name": "X-Download-Options",
									"description": "Custom header"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-Response-Time",
									"value": "222ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "200003076-0f25be261a93d645f5dc8721dcb7ca9d",
									"key": "addonLicense"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "2",
									"key": "addonVariant"
								},
								{
									"expires": "Invalid Date",
									"httpOnly": false,
									"domain": "localhost",
									"path": "/",
									"secure": false,
									"value": "au",
									"key": "addonRegion"
								}
							],
							"body": "[{\"labels\":\"[]\",\"moderation_labels\":null,\"vendor\":\"AWS Rekognition\",\"approved\":0,\"rejected\":0}]"
						}
					]
				}
			]
		},
		{
			"name": "Favourites",
			"item": [
				{
					"name": "/favourites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/favourites",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites"
							]
						}
					},
					"response": []
				},
				{
					"name": "/favourites/:favourite_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/favourites/:favourite_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites",
								":favourite_id"
							],
							"variable": [
								{
									"key": "favourite_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/favourites",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image_id\":asf2,\n\t\"sub_id\": \"my-user-1234\"\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/favourites",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites"
							]
						},
						"description": "\n\n#### POST Body Parameters\n\n| Key  | Required | Description                                                                                     |\n|------|----------|-------------------------------------------------------------------------------------------------|\n| image_id | required | The id of the image to favourite.\n| sub_id | optional | A custom value you can set yourself, and then use to split the results of GET /favourites by, e.g. your own user's id.                                                    |"
					},
					"response": []
				},
				{
					"name": "/favourites/:favourite_id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/favourites/:favourite_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"favourites",
								":favourite_id"
							],
							"variable": [
								{
									"key": "favourite_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Votes",
			"item": [
				{
					"name": "/votes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/votes",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes"
							]
						}
					},
					"response": []
				},
				{
					"name": "/votes/:vote_id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/votes/:vote_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes",
								":vote_id"
							],
							"variable": [
								{
									"key": "vote_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/votes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image_id\":asf2,\n\t\"sub_id\": \"my-user-1234\"\n}"
						},
						"url": {
							"raw": "{{endpoint}}v1/votes",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"votes"
							]
						}
					},
					"response": []
				},
				{
					"name": "/votes/:vote_id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "{{YOUR-API-KEY}}",
								"description": "[required]"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/vote/:vote_id",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"vote",
								":vote_id"
							],
							"variable": [
								{
									"key": "vote_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "/categories",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{endpoint}}v1/categories",
							"host": [
								"{{endpoint}}v1"
							],
							"path": [
								"categories"
							]
						},
						"description": "Returns all the available categories to use when search for images via `/v1/images/search`"
					},
					"response": [
						{
							"name": "/categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{endpoint}}v1/categories?",
									"host": [
										"{{endpoint}}v1"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "Content-Type",
											"value": "appli",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Pagination-Count, Pagination-Page, Pagination-Limit",
									"name": "Access-Control-Expose-Headers",
									"description": "Lets a server whitelist headers that browsers are allowed to access."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 29 Aug 2018 15:50:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Pagination-Count",
									"value": "11",
									"name": "Pagination-Count",
									"description": "Custom header"
								},
								{
									"key": "Pagination-Limit",
									"value": "1000",
									"name": "Pagination-Limit",
									"description": "Custom header"
								},
								{
									"key": "Pagination-Page",
									"value": "0",
									"name": "Pagination-Page",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "nginx/1.12.1",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains",
									"name": "Strict-Transport-Security",
									"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								},
								{
									"key": "Vary",
									"value": "Origin",
									"name": "Vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff",
									"name": "X-Content-Type-Options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off",
									"name": "X-DNS-Prefetch-Control",
									"description": "Custom header"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen",
									"name": "X-Download-Options",
									"description": "Custom header"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN",
									"name": "X-Frame-Options",
									"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
								},
								{
									"key": "X-Response-Time",
									"value": "4ms",
									"name": "X-Response-Time",
									"description": "Custom header"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block",
									"name": "X-XSS-Protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "[{\"id\":5,\"name\":\"boxes\"},{\"id\":6,\"name\":\"caturday\"},{\"id\":15,\"name\":\"clothes\"},{\"id\":9,\"name\":\"dream\"},{\"id\":3,\"name\":\"funny\"},{\"id\":1,\"name\":\"hats\"},{\"id\":10,\"name\":\"kittens\"},{\"id\":14,\"name\":\"sinks\"},{\"id\":2,\"name\":\"space\"},{\"id\":4,\"name\":\"sunglasses\"},{\"id\":7,\"name\":\"ties\"}]"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "15106d49-ee9b-4af7-a9b5-13f619ba1925",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c5ea244c-2e83-4f11-b5d2-d1e449487166",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "47d9bbe2-ed4c-436d-abdd-076efaefabb4",
			"key": "YOUR-API-KEY",
			"value": "535edd5b-5837-4f34-88b0-7f300a532771",
			"type": "string"
		},
		{
			"id": "ddcd8cfd-4839-43e7-90ec-f2cb16b607f6",
			"key": "endpoint",
			"value": "https://api.thecatapi.com/",
			"type": "string"
		}
	]
}